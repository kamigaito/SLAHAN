PROJECT(dynet:compressor)
CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
set(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)
include_directories(include)
include_directories(${Boost_INCLUDE_DIRS})
include_directories(${Dynet_INCLUDE_DIRS})
include_directories(${Eigen3_INCLUDE_DIRS})
LINK_DIRECTORIES(${Boost_LIBRARIES})
LINK_DIRECTORIES(${Eigen3_LIBRARIES})
LINK_DIRECTORIES(${Dynet_LIBRARIES})
# checking Boost
set(Boost_REALPATH ON)
find_package(Boost COMPONENTS program_options iostreams serialization regex REQUIRED)
find_package(HDF5 REQUIRED COMPONENTS C CXX)
ADD_EXECUTABLE(slahan lib/slahan.cpp ${PROJECT_SOURCE_DIR}/lib/dict.cc)
ADD_EXECUTABLE(base lib/base.cpp ${PROJECT_SOURCE_DIR}/lib/dict.cc)
ADD_EXECUTABLE(attn lib/attn.cpp ${PROJECT_SOURCE_DIR}/lib/dict.cc)
ADD_EXECUTABLE(lstm lib/lstm.cpp ${PROJECT_SOURCE_DIR}/lib/dict.cc)
ADD_EXECUTABLE(tagger lib/tagger.cpp ${PROJECT_SOURCE_DIR}/lib/dict.cc)
set(LIBS ${LIBS} ${Boost_LIBRARIES} ${Dynet_LINK} ${HDF5_CXX_HL_LIBRARIES} ${HDF5_CXX_LIBRARIES})
target_link_libraries(slahan ${LIBS})
target_link_libraries(base ${LIBS})
target_link_libraries(attn ${LIBS})
target_link_libraries(lstm ${LIBS})
target_link_libraries(tagger ${LIBS})
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC -std=c++11 -O3 -g")
